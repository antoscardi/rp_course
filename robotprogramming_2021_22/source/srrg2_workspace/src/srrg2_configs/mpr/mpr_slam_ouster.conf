"MPRCloser" { 
  "#id" : 1, 
  "name" : "closer", 

  // loop detector to detect loop, for now only HBST
  "loop_det" : { 
    "#pointer" : 2
   }, 

  // loop validator to perform geometric verification
  "loop_validator" : { 
    "#pointer" : 3
   }
 }

"LoopDetectorHBST" { 
  "#id" : 2, 
  "name" : "loop_detector", 

  // enables matches container filtering based on the match score
  "enable_matches_filtering" : 1, 

  // frame interspace to consider a match
  "frame_interspace" : 20, 

  // maximum distance (Hamming) between descriptors
  "max_descriptor_distance" : 30, 

  // minimum ratio between the number of framepoints in the query and in the match
  "minimum_matching_ratio" : 0.0500000007
 }

"PipelineRunner" { 
  "#id" : 4, 
  "name" : "runner", 
  "push_sinks" : [ { 
  "#pointer" : 5
 } ], 

  // the source of the pipeline
  "source" : { 
    "#pointer" : 6
   }, 

  // name of the transform tree to subscribe to
  "tf_topic" : ""
 }

"SparseBlockLinearSolverCholmodFull" { 
  "#id" : 7
 }

"SimpleTerminationCriteria" { 
  "#id" : 8, 

  // ratio of decay of chi2 between iteration
  "epsilon" : 9.99999975e-06
 }

"RobustifierCauchy" { 
  "#id" : 9, 
  "name" : "cauchy", 

  // threshold of chi after which the kernel is active
  "chi_threshold" : 0.00999999978
 }

"SimpleTerminationCriteria" { 
  "#id" : 10, 

  // ratio of decay of chi2 between iteration
  "epsilon" : 9.99999975e-06
 }

"MPRTrackerStandalone" { 
  "#id" : 11, 
  "name" : "tracker", 

  // base_link_of_the_robot
  "base_frame_id" : "/base_link", 

  // pose of current keyframe in mpr map origin
  "keyframe_frame_id" : "/mpr_keyframe", 

  // rotations above this, change keyframe
  "keyframe_rotation" : 0.100000001, 

  // how many frames between keyframes
  "keyframe_steps" : 0, 

  // translations above this, change keyframe
  "keyframe_translation" : 0.5, 

  // pose of current frame in keyframe
  "local_frame_id" : "/mpr_local", 

  // mpr_origin_frame_id
  "origin_frame_id" : "/mpr_origin", 
  "push_sinks" : [ { 
  "#pointer" : 12
 }, { 
  "#pointer" : 13
 } ], 

  // topic of the pyramid to listen
  "pyramid_topic" : "/mpr_pyramid", 

  // solver running mpr stuff
  "solver" : { 
    "#pointer" : 14
   }, 

  // topic where to push the dynamic transforms
  "tf_dyn_topic" : "/tf", 

  // name of the transform tree to subscribe to
  "tf_topic" : ""
 }

"SparseBlockLinearSolverCholmodFull" { 
  "#id" : 15
 }

"MPRFactorShowAction" { 
  "#id" : 16, 

  // event to which react
  "event" : 3, 

  // priority of the event, higher is 0
  "priority" : 0
 }

"MessageROSBagSource" { 
  "#id" : 6, 
  "name" : "source", 

  // file to read
  "filename" : "orgio.bag", 
  "topics" : [ "/os1/image_depth", "/os1/image_intensity", "/camera_info" ], 

  // verbose
  "verbose" : 0
 }

"IterationAlgorithmLM" { 
  "#id" : 17, 
  "name" : "lm", 

  // max lm iterations [default: 10]
  "lm_iterations_max" : 10, 

  // upper clamp for lambda if things go well
  "step_high" : 0.666666687, 

  // lower clamp for lambda if things go well 
  "step_low" : 0.333333343, 

  // scale factor for the lambda computed by the system, do not influence the one provided by the user [default: 1e-5]
  "tau" : 9.99999975e-06, 

  // initial lm lambda, if 0 is computed by system [default: 0]
  "user_lambda_init" : 0, 

  // set to true uses lambda*diag(H), otherwise uses lambda*I [default: true]
  "variable_damping" : 1
 }

"Solver" { 
  "#id" : 18, 
  "name" : "solver", 
  "actions" : [  ], 

  // pointer to the optimization algorithm (GN/LM or others)
  "algorithm" : { 
    "#pointer" : 17
   }, 

  // pointer to linear solver used to compute Hx=b
  "linear_solver" : { 
    "#pointer" : 15
   }, 
  "max_iterations" : [ 5 ], 

  // Minimum mean square error variation to perform global optimization
  "mse_threshold" : -1, 
  "robustifier_policies" : [ { 
  "#pointer" : 19
 } ], 

  // term criteria ptr, if 0 solver will do max iterations
  "termination_criteria" : { 
    "#pointer" : 10
   }, 

  // turn it off to make the world a better place
  "verbose" : 0
 }

"MPRNormalComputator2DCrossProduct" { 
  "#id" : 20, 

  // col gap for computing cross product
  "col_gap" : 1, 

  // row gap for computing cross product
  "row_gap" : 1, 

  // squared max distance between points to compute the normal
  "squared_max_distance" : 0.5
 }

"Solver" { 
  "#id" : 21, 
  "name" : "solver_pgo", 
  "actions" : [  ], 

  // pointer to the optimization algorithm (GN/LM or others)
  "algorithm" : { 
    "#pointer" : 17
   }, 

  // pointer to linear solver used to compute Hx=b
  "linear_solver" : { 
    "#pointer" : 15
   }, 
  "max_iterations" : [ 5 ], 

  // Minimum mean square error variation to perform global optimization
  "mse_threshold" : -1, 
  "robustifier_policies" : [ { 
  "#pointer" : 19
 } ], 

  // term criteria ptr, if 0 solver will do max iterations
  "termination_criteria" : { 
    "#pointer" : 10
   }, 

  // turn it off to make the world a better place
  "verbose" : 0
 }

"MPRPyramidGenerator" { 
  "#id" : 22, 
  "name" : "pyrgen", 

  // base_link_of_the_robot
  "base_frame_id" : "/base_link", 

  // if not set to -1, overrides the type of the camera to selected value
  "cam_type_override" : 1, 

  // topic where the camera info is broadcasted
  "camera_info_topic" : "/camera_info", 

  // applies a pre-scaling to the image cols
  "col_prescaling" : 1, 

  // todo
  "depth_derivative_threshold" : 1000, 

  // filter policy for Depth {0 Ignore, 1 Suppress, 2 Clamp}
  "depth_policy" : 0, 

  // if not set to anegative value, overrides the depth scale in camera info
  "depth_scale_override" : 0.00999999978, 

  // topic for the depth image, registered to the intensity channel
  "depth_topic" : "/os1/image_depth", 

  // todo
  "intensity_derivative_threshold" : 1000, 

  // filter policy for Intensity {0 Ignore, 1 Suppress, 2 Clamp}
  "intensity_policy" : 0, 

  // topic for the depth image, registered to the intensity channel
  "intensity_topic" : "/os1/image_intensity", 

  // radius to grow invalid mask
  "mask_grow_radius" : 1, 

  // max depth to consider while generating pyramids
  "max_depth" : 50, 

  // min depth to consider while generating pyramids
  "min_depth" : 0.300000012, 

  // algorithm to compute the normals
  "normal_computator" : { 
    "#pointer" : 20
   }, 

  // window size for normals blurring
  "normals_blur_region_size" : 3, 

  // todo
  "normals_derivative_threshold" : 0.5, 

  // filter policy for Normals {0 Ignore, 1 Suppress, 2 Clamp}
  "normals_policy" : 0, 

  // normal blurring factor
  "normals_scaled_blur_multiplier" : 1, 
  "push_sinks" : [ { 
  "#pointer" : 11
 }, { 
  "#pointer" : 12
 }, { 
  "#pointer" : 13
 } ], 

  // topic of the pyramid to generate
  "pyramid_output_topic" : "/mpr_pyramid", 

  // applies a pre-scaling to the image rows
  "row_prescaling" : 1, 
  "scales" : [ 1, 2, 4 ], 

  // name of the transform tree to subscribe to
  "tf_topic" : ""
 }

"Solver" { 
  "#id" : 14, 
  "actions" : [ { 
  "#pointer" : 16
 } ], 

  // pointer to the optimization algorithm (GN/LM or others)
  "algorithm" : { 
    "#pointer" : 23
   }, 

  // pointer to linear solver used to compute Hx=b
  "linear_solver" : { 
    "#pointer" : 7
   }, 
  "max_iterations" : [ 5, 10, 100 ], 

  // Minimum mean square error variation to perform global optimization
  "mse_threshold" : -1, 
  "robustifier_policies" : [  ], 

  // term criteria ptr, if 0 solver will do max iterations
  "termination_criteria" : { 
    "#pointer" : 8
   }, 

  // turn it off to make the world a better place
  "verbose" : 0
 }

"MPRTrackerViewer" { 
  "#id" : 12, 
  "name" : "viewer", 
  "push_sinks" : [  ], 

  // tracker status
  "status_topic" : "/mpr_tracker_status", 

  // name of the transform tree to subscribe to
  "tf_topic" : "", 

  // coordinates resolution
  "voxelize_coord_res" : 0.0500000007, 

  // when to voxelize
  "voxelize_interval" : 10, 

  // normal resolution
  "voxelize_normal_res" : 0
 }

"MPRGraphManager" { 
  "#id" : 13, 
  "name" : "graph_manager", 

  // enable closures
  "enable_closures" : 1, 

  // closer manager for mpr
  "mpr_closer" : { 
    "#pointer" : 1
   }, 
  "push_sinks" : [  ], 

  // pose-graph solver
  "solver" : { 
    "#pointer" : 21
   }, 

  // tracker status
  "status_topic" : "/mpr_tracker_status", 

  // name of the transform tree to subscribe to
  "tf_topic" : ""
 }

"LoopValidator" { 
  "#id" : 3, 
  "name" : "loop_validator", 

  // if not set to -1, 0 for pinhole projection, 1 for spherical projection
  "camera_type" : 1, 

  // if true refines estimate with complete voxelized clouds and ICP
  "enable_full_validation" : 1, 

  // kdtree max leaf distance in meters
  "kdtree_max_leaf_distance" : 0.00999999978, 

  // kdtree min leaf size
  "kdtree_min_leaf_size" : 20, 

  // coarse validation: translation between two frame poses
  "max_frame_poses_translation_radius" : 2, 

  // max reprojection error when evaluating best fitting model
  "max_reprojection_error" : 3, 

  // min num inliers after RANSAC validation
  "min_num_inliers" : 25, 

  // min number of correspondences to use with SVD ICP and RANSAC
  "min_ransac_correspondences" : 3, 

  // min number of correspondences to use with SVD ICP and RANSAC
  "ransac_rounds" : 70, 

  // registration solver
  "solver" : { 
    "#pointer" : 18
   }, 

  // if set use kd3 instead of reprojection error
  "use_kdtree" : 0
 }

"RobustifierPolicyByType" { 
  "#id" : 19, 
  "name" : "robustifier_policy", 

  // name of the class of the matching factor
  "factor_class_name" : "SE3Point2PointErrorFactorCorrespondenceDriven", 

  // robustifier matching the rule
  "robustifier" : { 
    "#pointer" : 9
   }
 }

"IterationAlgorithmGN" { 
  "#id" : 23, 

  // damping factor, the higher the closer to gradient descend. Default:0
  "damping" : 0.100000001
 }

"MessageSynchronizedSink" { 
  "#id" : 24, 

  // name of the frame in the message pack
  "output_frame_id" : "pack_frame_id", 

  // name of the topic in the message pack
  "output_topic" : "/pack", 
  "push_sinks" : [ { 
  "#pointer" : 22
 } ], 

  // name of the transform tree to subscribe to
  "tf_topic" : "", 

  // interval for the messages to be sinchronized
  "time_interval" : 0.10000000000000001, 
  "topics" : [ "/os1/image_depth", "/os1/image_intensity", "/camera_info" ]
 }

"MessageSortedSink" { 
  "#id" : 5, 
  "name" : "sink", 

  // messages older than this lag that will be blasted, no matta what
  "oblivion_interval" : 5, 
  "push_sinks" : [ { 
  "#pointer" : 24
 } ], 

  // name of the transform tree to subscribe to
  "tf_topic" : "", 

  // lag time to sort messages
  "time_interval" : 1, 

  // if set prints crap
  "verbose" : 0
 }

